{"version":3,"sources":["Components/Customer/AddCustomerModal.js","Components/Customer/EditCustomerModal.js","Components/Customer/DeleteCustomerModal.js","Components/Customer/Customer.js","Components/Product/AddProductModal.js","Components/Product/EditProductModal.js","Components/Product/DeleteProductModal.js","Components/Product/Product.js","Components/Store/AddStoreModal.js","Components/Store/EditStoreModal.js","Components/Store/DeleteStoreModal.js","Components/Store/store.js","Components/Sales/AddSalesModal.js","Components/Sales/EditSalesModal.js","Components/Sales/DeleteSalesModal.js","Components/Sales/sales.js","Components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["AddCustomerModal","props","event","preventDefault","fetch","method","headers","body","JSON","stringify","CustomerID","Name","target","value","Address","then","res","json","onHide","className","Modal","this","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","Row","Col","sm","Form","onSubmit","e","handleSubmit","Group","controlId","Control","type","name","required","placeholder","Button","variant","onClick","Component","EditCustomerModal","disabled","defaultValue","custid","custname","custaddress","DeleteCustomerModal","Accept","Customer","state","cust","addModalShow","editModalShow","deleteModalShow","refreshList","response","data","setState","editModalClose","deleteModalClose","ButtonToolbar","show","Table","map","key","AddProductModal","ProductID","Price","EditProductModal","productid","proname","proprice","Footer","DeleteProductModal","Product","pro","AddStoreModal","StoreID","EditStoreModal","storeid","stname","staddress","DeleteStoreModal","Store","st","AddSalesModal","customerList","ProductList","StoreList","customerId","productId","storeId","SalesID","DateSold","console","log","Label","as","onChange","handleDropdownChange","option","index","datatype","EditSalesModal","customername","salesid","productname","storename","salesdatesold","DeleteSalesModal","Sales","sles","CustomerName","ProductName","StoreName","openEditDialog","Navigation","Navbar","bg","expand","Toggle","aria-controls","Collapse","Brand","href","Nav","to","App","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c014da35.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport{Modal, Button, Row, Col, Form } from 'react-bootstrap';\r\n\r\nexport class AddCustomerModal extends Component{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n    }\r\n\r\n    // insert into Database\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n\r\n        fetch('https://onboardtask.azurewebsites.net/api/customer',{\r\n            method:'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify({\r\n                CustomerID:null,\r\n                Name: event.target.Name.value,\r\n                Address: event.target.Address.value\r\n            })\r\n        })\r\n        .then((res) => {\r\n            res.json();\r\n            this.props.onHide();\r\n          });\r\n       \r\n    }\r\n\r\n    render(){\r\n        return(\r\n\r\n        <div className=\"container\">\r\n            <Modal\r\n      {...this.props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\" centered >\r\n      \r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Add Customer \r\n        </Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <Modal.Body>\r\n        \r\n           <Row>\r\n               <Col sm={6}>\r\n                   <Form onSubmit={(e) => this.handleSubmit(e)}>\r\n\r\n                       <Form.Group controlId=\"Name\">\r\n                            <Form.Control type=\"text\" name=\"Name\" required \r\n                            placeholder=\"Name\"></Form.Control>\r\n                       </Form.Group>\r\n\r\n                       <Form.Group controlId=\"Address\">\r\n                           <Form.Control type=\"text\" name=\"Address\" required\r\n                           placeholder=\"Address\"></Form.Control>\r\n                       </Form.Group>\r\n\r\n                       <Form.Group>\r\n                       <Button variant=\"primary\" type=\"Submit\" > Add  </Button>\r\n        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                       </Form.Group>\r\n\r\n                   </Form>\r\n               </Col>\r\n           </Row>\r\n\r\n        \r\n      </Modal.Body>\r\n\r\n     \r\n    </Modal>\r\n    </div>\r\n        );\r\n    }\r\n}\r\n","import React,{Component} from 'react';\r\nimport {Modal, Button, Row, Col, Form } from 'react-bootstrap';\r\n\r\nexport class EditCustomerModal extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n\r\n        fetch('https://onboardtask.azurewebsites.net/api/customer',{\r\n            method:'PUT',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify({\r\n                CustomerID:event.target.CustomerID.value,\r\n                Name: event.target.Name.value,\r\n                Address: event.target.Address.value\r\n            })\r\n        })\r\n        .then((res) => {\r\n            res.json();\r\n            this.props.onHide();\r\n          });\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n\r\n        <div className=\"container\">\r\n\r\n            <Modal\r\n      {...this.props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\" centered >\r\n      \r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Edit Customer \r\n        </Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <Modal.Body>\r\n           \r\n           <Row>\r\n               <Col sm={6}>\r\n                   <Form onSubmit={(e) => this.handleSubmit(e)}>\r\n\r\n                   <Form.Group controlId=\"CustomerID\" disabled>\r\n                            <Form.Control type=\"text\" name=\"CustomerID\" required \r\n                             placeholder=\"CustomerID\" disabled defaultValue={this.props.custid}></Form.Control>\r\n                       </Form.Group>\r\n\r\n                       <Form.Group controlId=\"Name\">\r\n                            <Form.Control type=\"text\" name=\"Name\" required \r\n                            placeholder=\"Name\" defaultValue={this.props.custname}></Form.Control>\r\n                       </Form.Group>\r\n\r\n                       <Form.Group controlId=\"Address\">\r\n                           <Form.Control type=\"text\" name=\"Address\" required\r\n                           placeholder=\"Address\" defaultValue={this.props.custaddress}></Form.Control>\r\n                       </Form.Group>\r\n\r\n                       <Form.Group>\r\n                           <Button variant=\"primary\" type=\"Submit\" > Update </Button>\r\n                           <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                       </Form.Group>\r\n\r\n                   </Form>\r\n               </Col>\r\n           </Row>\r\n\r\n      </Modal.Body>\r\n    </Modal>\r\n    </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, Col, Form } from \"react-bootstrap\";\r\n\r\nexport class DeleteCustomerModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    fetch(\"https://onboardtask.azurewebsites.net/api/customer/\" + this.props.custid, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then((res) => {\r\n        this.props.onHide()\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Modal\r\n          {...this.props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Delete Customer\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Row>\r\n              <Col sm={6}>\r\n                <Form >\r\n                  <Form.Group>\r\n                    <label >Are you sure you want to delete?</label>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                  <Button onClick={(e) => this.handleSubmit(e)} variant=\"primary\" type=\"button\">\r\n                      Ok \r\n                    </Button>\r\n            <Button variant=\"danger\" onClick={this.props.onHide}>\r\n              Cancle\r\n            </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { Button, ButtonToolbar } from \"react-bootstrap\";\r\nimport { AddCustomerModal } from \"./AddCustomerModal\";\r\nimport { EditCustomerModal } from \"./EditCustomerModal\";\r\nimport { DeleteCustomerModal } from \"./DeleteCustomerModal\";\r\n\r\nexport class Customer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cust: [],\r\n      addModalShow: false,\r\n      editModalShow: false,\r\n      deleteModalShow: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshList();\r\n  }\r\n\r\n  refreshList() {\r\n    fetch(\"https://onboardtask.azurewebsites.net/api/customer\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({ cust: data });\r\n      });\r\n  }\r\n\r\n  componentDidUpdate() {}\r\n\r\n  \r\n  render() {\r\n    const { cust, custid, custname, custaddress } = this.state;\r\n    let addModalClose = () => {\r\n        this.refreshList();\r\n        this.setState({ addModalShow: false });\r\n    };\r\n    let editModalClose = () => {\r\n        this.refreshList();\r\n        this.setState({ editModalShow: false });\r\n    };\r\n    let deleteModalClose = () => {\r\n      this.refreshList();\r\n      this.setState({ deleteModalShow: false });\r\n    };\r\n    return (\r\n      <div>\r\n        <ButtonToolbar>\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={() => this.setState({ addModalShow: true })}\r\n          >\r\n            Add Customer{\" \"}\r\n          </Button>\r\n\r\n          <AddCustomerModal\r\n            show={this.state.addModalShow}\r\n            onHide={\r\n              addModalClose}\r\n          ></AddCustomerModal>\r\n        </ButtonToolbar>\r\n        <Table className=\"mt-4\">\r\n          <thead>\r\n            <tr>\r\n              {/* <th>CustomerID</th> */}\r\n              <th>Name</th>\r\n              <th>Address</th>\r\n              <th> Actions </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {cust.map((cust) => (\r\n              <tr key={cust.CustomerID}>\r\n                {/* <td>{cust.CustomerID}</td> */}\r\n                <td>{cust.Name}</td>\r\n                <td>{cust.Address}</td>\r\n                <td>\r\n                  <ButtonToolbar>\r\n                    <Button\r\n                      className=\"mr-2\"\r\n                      variant=\"info\"\r\n                      onClick={() =>\r\n                        this.setState({\r\n                          editModalShow: true,\r\n                          custid: cust.CustomerID,\r\n                          custname: cust.Name,\r\n                          custaddress: cust.Address,\r\n                        })\r\n                      }\r\n                    >\r\n                      {\" \"}\r\n                      Edit{\" \"}\r\n                    </Button>\r\n\r\n                    <Button\r\n                      className=\"mr-2\"\r\n                      variant=\"danger\"\r\n                      onClick={() =>\r\n                        this.setState({\r\n                          deleteModalShow: true,\r\n                          custid: cust.CustomerID,\r\n                        })\r\n                      }\r\n                    >\r\n                      {\" \"}\r\n                      Delete{\" \"}\r\n                    </Button>\r\n\r\n                    <EditCustomerModal\r\n                      show={this.state.editModalShow}\r\n                      onHide={editModalClose}\r\n                      custid={custid}\r\n                      custname={custname}\r\n                      custaddress={custaddress}\r\n                    ></EditCustomerModal>\r\n\r\n                    <DeleteCustomerModal\r\n                      show={this.state.deleteModalShow}\r\n                      onHide={deleteModalClose}\r\n                      custid={custid}\r\n                    ></DeleteCustomerModal>\r\n                  </ButtonToolbar>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React,{Component} from 'react';\r\nimport{Modal, Button, Row, Col, Form } from 'react-bootstrap';\r\n\r\nexport class AddProductModal extends Component{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n    }\r\n    // insert into Database\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n\r\n        fetch('https://onboardtask.azurewebsites.net/api/product',{\r\n            method:'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify({\r\n                ProductID:null,\r\n                Name: event.target.Name.value,\r\n                Price: event.target.Price.value\r\n            })\r\n        })\r\n        .then((res) => {\r\n            res.json();\r\n            this.props.onHide();\r\n          });\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n\r\n        <div className=\"container\">\r\n            <Modal\r\n      {...this.props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\" centered >\r\n      \r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Add Product \r\n        </Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <Modal.Body>\r\n        \r\n           \r\n           <Row>\r\n               <Col sm={6}>\r\n                   <Form onSubmit={(e)=>this.handleSubmit(e)}>\r\n\r\n                       <Form.Group controlId=\"Name\">\r\n                            <Form.Control type=\"text\" name=\"Name\" required \r\n                            placeholder=\"Name\"></Form.Control>\r\n                       </Form.Group>\r\n\r\n                       <Form.Group controlId=\"Price\">\r\n                           <Form.Control type=\"text\" name=\"Price\" required\r\n                           placeholder=\"Price\"></Form.Control>\r\n                       </Form.Group>\r\n\r\n                       <Form.Group>\r\n                       <Button variant=\"primary\" type=\"Submit\" > Add  </Button>\r\n        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                       </Form.Group>\r\n\r\n                   </Form>\r\n               </Col>\r\n           </Row>\r\n\r\n        \r\n      </Modal.Body>\r\n\r\n     \r\n\r\n    </Modal>\r\n    </div>\r\n        );\r\n    }\r\n}\r\n","import React,{Component} from 'react';\r\nimport {Modal, Button, Row, Col, Form } from 'react-bootstrap';\r\n\r\nexport class EditProductModal extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n\r\n        fetch('https://onboardtask.azurewebsites.net/api/product',{\r\n            method:'PUT',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify({\r\n                ProductID:event.target.ProductID.value,\r\n                Name: event.target.Name.value,\r\n                Price: event.target.Price.value\r\n            })\r\n        })\r\n        .then((res) => {\r\n            res.json();\r\n            this.props.onHide();\r\n          });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n\r\n        <div className=\"container\">\r\n\r\n            <Modal\r\n      {...this.props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\" centered >\r\n      \r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Edit Customer \r\n        </Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <Modal.Body>\r\n           \r\n           <Row>\r\n               <Col sm={6}>\r\n                   <Form onSubmit={(e) => this.handleSubmit(e)}>\r\n\r\n                   <Form.Group controlId=\"ProductID\" disabled>\r\n                            <Form.Control type=\"text\" name=\"ProductID\" required \r\n                             placeholder=\"ProductID\" disabled defaultValue={this.props.productid}></Form.Control>\r\n                       </Form.Group>\r\n\r\n                    <Form.Group controlId=\"Name\">\r\n                            <Form.Control type=\"text\" name=\"Name\" required \r\n                            placeholder=\"Name\" defaultValue={this.props.proname}></Form.Control>\r\n                       </Form.Group>\r\n\r\n                       <Form.Group controlId=\"Price\">\r\n                           <Form.Control type=\"text\" name=\"Price\" required\r\n                           placeholder=\"Price\" defaultValue={this.props.proprice}></Form.Control>\r\n                       </Form.Group>\r\n\r\n                       <Form.Group>\r\n                            <Button variant=\"primary\" type=\"Submit\" > Update  </Button>\r\n                            <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                       </Form.Group>\r\n\r\n                   </Form>\r\n               </Col>\r\n           </Row>\r\n\r\n        \r\n      </Modal.Body>\r\n\r\n      <Modal.Footer>\r\n      \r\n      </Modal.Footer>\r\n\r\n    </Modal>\r\n    </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, Col, Form } from \"react-bootstrap\";\r\n\r\nexport class DeleteProductModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    fetch(\"https://onboardtask.azurewebsites.net/api/product/\" + this.props.productid, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then((res) => {\r\n        this.props.onHide()\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Modal\r\n          {...this.props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Delete Product\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Row>\r\n              <Col sm={6}>\r\n                <Form >\r\n                  <Form.Group>\r\n                    <label >Are you sure you want to delete?</label>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                  <Button onClick={(e) => this.handleSubmit(e)} variant=\"primary\" type=\"button\">\r\n                      Delete \r\n                    </Button>\r\n            <Button variant=\"danger\" onClick={this.props.onHide}>\r\n              Close\r\n            </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n\r\n          <Modal.Footer>\r\n          \r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React,{Component} from 'react';\r\nimport {Table} from 'react-bootstrap';\r\nimport {Button, ButtonToolbar} from 'react-bootstrap';\r\nimport {AddProductModal} from './AddProductModal';\r\nimport {EditProductModal} from './EditProductModal';\r\nimport {DeleteProductModal} from './DeleteProductModal';\r\n\r\nexport class Product extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={pro:[], addModalShow : false, editModalShow : false, deleteModalShow:false}\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.refreshList();\r\n    }\r\n\r\n    refreshList(){\r\n        fetch('https://onboardtask.azurewebsites.net/api/product')\r\n        .then(response=> response.json())\r\n        .then(data => {\r\n            this.setState({pro:data});\r\n        })\r\n    }\r\n\r\n    componentDidUpdate()    {}\r\n    \r\n    render()\r\n    {\r\n       \r\n        const {pro, productid, proname, proprice} = this.state;\r\n        let addModalClose=() => {\r\n            this.refreshList();\r\n            this.setState({addModalShow:false});\r\n        };\r\n        let editModalClose=() =>{ \r\n            this.refreshList();\r\n            this.setState({editModalShow:false});\r\n        };\r\n        let deleteModalClose=() => {\r\n            this.refreshList();\r\n            this.setState({deleteModalShow:false});\r\n        };\r\n        return(\r\n            <div> \r\n                <ButtonToolbar>\r\n                    <Button variant='primary' onClick={()=> this.setState({addModalShow:true})}>\r\n                         Add Product </Button >\r\n\r\n                    <AddProductModal show={this.state.addModalShow}\r\n                                      onHide={\r\n                                          addModalClose}\r\n                    ></AddProductModal>\r\n                </ButtonToolbar>\r\n                <Table className=\"mt-4\" >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Price</th>\r\n                            <th> Actions </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {pro.map(pro=>\r\n                            <tr key ={pro.ProductID}>\r\n                            \r\n                            <td>{pro.Name}</td>\r\n                            <td>{pro.Price}</td>\r\n                            <td>\r\n                                <ButtonToolbar>\r\n                                    <Button className=\"mr-2\" variant=\"info\" \r\n                                    onClick={()=> this.setState({editModalShow:true, \r\n                                    productid:pro.ProductID, proname:pro.Name,\r\n                                    proprice:pro.Price})}> Edit </Button>\r\n\r\n                                    <Button className=\"mr-2\" variant=\"danger\" \r\n                                    onClick={()=>this.setState({deleteModalShow:true,\r\n                                       productid: pro.ProductID})}> Delete </Button>\r\n\r\n                                    <EditProductModal show={this.state.editModalShow}\r\n                                    onHide={editModalClose} productid={productid} \r\n                                    proname={proname} proprice={proprice}>\r\n                                    </EditProductModal>\r\n\r\n                                    <DeleteProductModal show={this.state.deleteModalShow}\r\n                                    onHide={deleteModalClose} productid={productid}></DeleteProductModal>\r\n\r\n                                </ButtonToolbar>\r\n                            </td>\r\n                            </tr>\r\n                            )}\r\n                    </tbody>\r\n                </Table>\r\n                \r\n            </div>\r\n            \r\n        )\r\n        \r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, Col, Form } from \"react-bootstrap\";\r\n\r\nexport class AddStoreModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  // insert into Database\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    fetch(\"https://onboardtask.azurewebsites.net/api/store\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        StoreID: null,\r\n        Name: event.target.Name.value,\r\n        Address: event.target.Address.value,\r\n      }),\r\n    }).then((res) => {\r\n      res.json();\r\n      this.props.onHide();\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Modal\r\n          {...this.props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">Add</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Row>\r\n              <Col sm={6}>\r\n                <Form onSubmit={(e) => this.handleSubmit(e)}>\r\n                  <Form.Group controlId=\"Name\">\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"Name\"\r\n                      required\r\n                      placeholder=\"Name\"\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"Address\">\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"Address\"\r\n                      required\r\n                      placeholder=\"Address\"\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group>\r\n                    <Button variant=\"primary\" type=\"Submit\">\r\n                      {\" \"}\r\n                      Add{\" \"}\r\n                    </Button>\r\n                    <Button variant=\"danger\" onClick={this.props.onHide}>\r\n                      Close\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, Col, Form } from \"react-bootstrap\";\r\n\r\nexport class EditStoreModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    fetch(\"https://onboardtask.azurewebsites.net/api/store\", {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        StoreID: event.target.StoreID.value,\r\n        Name: event.target.Name.value,\r\n        Address: event.target.Address.value,\r\n      }),\r\n    }).then((res) => {\r\n      res.json();\r\n      this.props.onHide();\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Modal\r\n          {...this.props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Edit Store\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Row>\r\n              <Col sm={6}>\r\n                <Form onSubmit={(e) => this.handleSubmit(e)}>\r\n                  <Form.Group controlId=\"StoreID\">\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"StoreID\"\r\n                      required\r\n                      placeholder=\"StoreID\"\r\n                      disabled\r\n                      defaultValue={this.props.storeid}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"Name\">\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"Name\"\r\n                      required\r\n                      placeholder=\"Name\"\r\n                      defaultValue={this.props.stname}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"Address\">\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"Address\"\r\n                      required\r\n                      placeholder=\"Address\"\r\n                      defaultValue={this.props.staddress}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group>\r\n                    <Button variant=\"primary\" type=\"Submit\">\r\n                      {\" \"}\r\n                      Update{\" \"}\r\n                    </Button>\r\n                    <Button variant=\"danger\" onClick={this.props.onHide}>\r\n                      Close\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, Col, Form } from \"react-bootstrap\";\r\n\r\nexport class DeleteStoreModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    fetch(\"https://onboardtask.azurewebsites.net/api/store/\" + this.props.storeid, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then((res) => {\r\n        this.props.onHide()\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Modal\r\n          {...this.props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Delete \r\n            </Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Row>\r\n              <Col sm={6}>\r\n                <Form >\r\n                  <Form.Group>\r\n                    <label >Are you sure you want to delete?</label>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                  <Button onClick={(e) => this.handleSubmit(e)} variant=\"primary\" type=\"button\">\r\n                      Delete \r\n                    </Button>\r\n            <Button variant=\"danger\" onClick={this.props.onHide}>\r\n              Close\r\n            </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React,{Component} from 'react';\r\nimport {Table} from 'react-bootstrap';\r\nimport {Button, ButtonToolbar} from 'react-bootstrap';\r\nimport {AddStoreModal} from './AddStoreModal';\r\nimport {EditStoreModal} from './EditStoreModal';\r\nimport {DeleteStoreModal} from './DeleteStoreModal';\r\n\r\nexport class Store extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={st:[], addModalShow : false, editModalShow : false, deleteModalShow:false}\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.refreshList();\r\n    }\r\n\r\n    refreshList(){\r\n        fetch('https://onboardtask.azurewebsites.net/api/store')\r\n        .then(response=> response.json())\r\n        .then(data => {\r\n            this.setState({st:data});\r\n        })\r\n    }\r\n\r\n    componentDidUpdate()\r\n    { }\r\n\r\n\r\n    render()\r\n    {\r\n       \r\n        const {st, storeid, stname, staddress} = this.state;\r\n        let addModalClose=() => {\r\n            this.refreshList();\r\n            this.setState({addModalShow:false});\r\n        };\r\n        let editModalClose=() => {\r\n            this.refreshList();\r\n            this.setState({editModalShow:false});\r\n        };\r\n        let deleteModalClose=() => {\r\n            this.refreshList();\r\n            this.setState({deleteModalShow:false});\r\n        };\r\n        return(\r\n            <div> \r\n                <ButtonToolbar>\r\n                    <Button variant='primary' onClick={()=> this.setState({addModalShow:true})}>\r\n                         Add Store </Button >\r\n\r\n                    <AddStoreModal show={this.state.addModalShow}\r\n                                      onHide={ \r\n                                          addModalClose}\r\n                                      \r\n                    ></AddStoreModal>\r\n                </ButtonToolbar>\r\n                <Table className=\"mt-4\" >\r\n                    <thead>\r\n                        <tr>\r\n                            \r\n                            <th>Name</th>\r\n                            <th>Address</th>\r\n                            <th> Actions </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {st.map(st=>\r\n                            <tr key ={st.StoreID}>\r\n                            \r\n                            <td>{st.Name}</td>\r\n                            <td>{st.Address}</td>\r\n                            <td>\r\n                                <ButtonToolbar>\r\n                                    <Button className=\"mr-2\" variant=\"info\" \r\n                                    onClick={()=> this.setState({editModalShow:true, \r\n                                    storeid:st.StoreID, stname:st.Name,\r\n                                    staddress:st.Address})}> Edit </Button>\r\n\r\n                                    <Button className=\"mr-2\" variant=\"danger\" \r\n                                    onClick={()=>this.setState({deleteModalShow:true,\r\n                                       storeid: st.StoreID})}> Delete </Button>\r\n\r\n                                    <EditStoreModal show={this.state.editModalShow}\r\n                                    onHide={editModalClose} storeid={storeid} \r\n                                    stname={stname} staddress={staddress}>\r\n                                    </EditStoreModal>\r\n\r\n                                    <DeleteStoreModal show={this.state.deleteModalShow}\r\n                                    onHide={deleteModalClose} storeid={storeid}>\r\n                                    </DeleteStoreModal>\r\n\r\n                                </ButtonToolbar>\r\n                            </td>\r\n                            </tr>\r\n                            )}\r\n                    </tbody>\r\n                </Table>\r\n                \r\n            </div>\r\n            \r\n        )\r\n        \r\n    }\r\n}\r\n\r\n","import React, { Component} from \"react\";\r\nimport { Modal, Button, Row, Col, Form } from \"react-bootstrap\";\r\n\r\n\r\nexport class AddSalesModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      customerId: \"\",\r\n      productId: \"\",\r\n      storeId: \"\",\r\n      customerList: [],\r\n      ProductList: [],\r\n      StoreList: [],\r\n    };\r\n    this.refreshList();\r\n  }\r\n\r\n  // insert into Database\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    fetch(\"https://onboardtask.azurewebsites.net/api/sales\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        SalesID: null,\r\n        CustomerID: this.state.customerId,\r\n        ProductID: this.state.productId,\r\n        StoreID: this.state.storeId,\r\n        DateSold: event.target.DateSold.value,\r\n      }),\r\n    }).then((res) => {\r\n      res.json()\r\n      console.log(res);\r\n    });\r\n  }\r\n\r\n  refreshList = () => {\r\n    fetch(\"https://onboardtask.azurewebsites.net/api/customer\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({ customerList: data });\r\n      });\r\n\r\n    fetch(\"https://onboardtask.azurewebsites.net/api/product\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({ ProductList: data });\r\n      });\r\n\r\n    fetch(\"https://onboardtask.azurewebsites.net/api/store\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({ StoreList: data });\r\n      });\r\n  };\r\n\r\n  handleDropdownChange(e, type) {\r\n    this.setState({ [type]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Modal\r\n          {...this.props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Add Sales\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Row>\r\n              <Col sm={6}>\r\n                <Form onSubmit={(e) => this.handleSubmit(e)}>\r\n                  <Form.Group controlId=\"CustomerId\">\r\n                    <Form.Label>Customer Name</Form.Label>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      required\r\n                      onChange={(event) =>\r\n                        this.handleDropdownChange(event, \"customerId\")\r\n                      }\r\n                      value={this.state.customerId}\r\n                    >\r\n                      <option value=\"\">-- Select Customer -- </option>\r\n                      {this.state.customerList.map((option, index) => {\r\n                        return (\r\n                          <option key={index} value={option.CustomerID}>\r\n                            {option.Name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"ProductId\">\r\n                    <Form.Label>Product Name</Form.Label>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      required\r\n                      onChange={(event) =>\r\n                        this.handleDropdownChange(event, \"productId\")\r\n                      }\r\n                    >\r\n                      <option value=\"\">-- Select Product --</option>\r\n                      {this.state.ProductList.map((option, index) => {\r\n                        return (\r\n                          <option key={index} value={option.ProductID}>\r\n                            {option.Name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"StoreId\">\r\n                    <Form.Label>Store Name</Form.Label>\r\n                    <Form.Control\r\n                      required\r\n                      as=\"select\"\r\n                      onChange={(event) =>\r\n                        this.handleDropdownChange(event, \"storeId\")\r\n                      }\r\n                    >\r\n                      <option value=\"\">-- Select Store --</option>\r\n                      {this.state.StoreList.map((option, index) => {\r\n                        return (\r\n                          <option key={index} value={option.StoreID}>\r\n                            {option.Name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"DateSold\">\r\n                    <Form.Control\r\n                      type=\"date\"\r\n                      name=\"DateSold\"\r\n                      required\r\n                      placeholder=\"DateSold\"\r\n                      datatype=\"dd/mm/yyyy\"\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group>\r\n                    <Button variant=\"primary\" type=\"Submit\" > Add Sales </Button>\r\n                    <Button variant=\"danger\" onClick={this.props.onHide}>\r\n                      Close\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, options } from \"react\";\r\nimport { Modal, Button, Row, Col, Form, FormControl } from \"react-bootstrap\";\r\n\r\nexport class EditSalesModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      customerId: this.props.customername,\r\n      productId: \"\",\r\n      storeId: \"\",\r\n      customerList: [],\r\n      ProductList: [],\r\n      StoreList: [],\r\n    };\r\n    this.refreshList();\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    console.log(event.target.SalesID.value);\r\n    fetch(\"https://onboardtask.azurewebsites.net/api/sales\", {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        SalesID: event.target.SalesID.value,\r\n        CustomerID: event.target.customerId.value,\r\n         ProductID: event.target.productId.value,\r\n         StoreID: event.target.storeId.value,\r\n        DateSold: event.target.DateSold.value,\r\n      })\r\n    }).then((res) => {\r\n      res.json();\r\n      this.props.onHide();\r\n    });\r\n  }\r\n\r\n  refreshList = () => {\r\n    fetch(\"https://onboardtask.azurewebsites.net/api/customer\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({ customerList: data });\r\n      });\r\n\r\n    fetch(\"https://onboardtask.azurewebsites.net/api/product\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({ ProductList: data });\r\n      });\r\n\r\n    fetch(\"https://onboardtask.azurewebsites.net/api/store\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({ StoreList: data });\r\n      });\r\n  };\r\n\r\n  handleDropdownChange(e, type) {\r\n    this.setState({ [type]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Modal\r\n          {...this.props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Edit sales\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Row>\r\n              <Col sm={6}>\r\n                <Form onSubmit={(e) => this.handleSubmit(e)}>\r\n                  {/* <Form onSubmit={this.handleSubmit}> */}\r\n\r\n                  <Form.Group controlId=\"SalesID\" disabled>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"SalesID\"\r\n                      required\r\n                      placeholder=\"SalesID\"\r\n                      disabled\r\n                      defaultValue={this.props.salesid}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n                    <Form.Label>Customer Name</Form.Label>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      name=\"customerId\"\r\n                      required\r\n                      defaultValue={this.props.customername}\r\n                      onChange={(event) =>\r\n                        this.handleDropdownChange(event, \"customerId\")\r\n                      }\r\n                      value={this.state.customerId}\r\n                    >\r\n                      <option value=\"\">-- Select Customer -- </option>\r\n                      {this.state.customerList.map((option, index) => {\r\n                        return (\r\n                          <option key={index} value={option.CustomerID}>\r\n                            {option.Name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n                    <Form.Label>Product Name</Form.Label>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      required\r\n                      name=\"productId\"\r\n                      defaultValue={this.props.productname}\r\n                      onChange={(event) =>\r\n                        this.handleDropdownChange(event, \"productId\")\r\n                      }\r\n                    >\r\n                      <option value=\"\">-- Select Product --</option>\r\n                      {this.state.ProductList.map((option, index) => {\r\n                        return (\r\n                          <option key={index} value={option.ProductID}>\r\n                            {option.Name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n                    <Form.Label>Store Name</Form.Label>\r\n                    <Form.Control\r\n                      required\r\n                      as=\"select\"\r\n                      name=\"storeId\"\r\n                      defaultValue={this.props.storename}\r\n                      onChange={(event) =>\r\n                        this.handleDropdownChange(event, \"storeId\")\r\n                      }\r\n                    >\r\n                      <option value=\"\">-- Select Store --</option>\r\n                      {this.state.StoreList.map((option, index) => {\r\n                        return (\r\n                          <option key={index} value={option.StoreID}>\r\n                            {option.Name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"DateSold\">\r\n                    <Form.Control\r\n                      type=\"date\"\r\n                      name=\"DateSold\"\r\n                      required\r\n                      placeholder=\"DateSold\"\r\n                      datatype=\"dd/mm/yyyy\"\r\n                      defaultValue={this.props.salesdatesold}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group>\r\n                    <Button variant=\"primary\" type=\"Submit\" > Edit Sales\r\n                    </Button>\r\n                    <Button variant=\"danger\" onClick={this.props.onHide}>\r\n                      Close\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n\r\n          <Modal.Footer></Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, Col, Form } from \"react-bootstrap\";\r\n\r\nexport class DeleteSalesModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    fetch(\"https://onboardtask.azurewebsites.net/api/sales/\" + this.props.salesid, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then((res) => {\r\n        this.props.onHide()\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Modal\r\n          {...this.props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Delete Sales\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Row>\r\n              <Col sm={6}>\r\n                <Form >\r\n                  <Form.Group>\r\n                    <label >Are you sure you want to delete?</label>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                  <Button onClick={(e) => this.handleSubmit(e)} variant=\"primary\" type=\"button\">\r\n                      Delete \r\n                    </Button>\r\n            <Button variant=\"danger\" onClick={this.props.onHide}>\r\n              Close\r\n            </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n\r\n          <Modal.Footer>\r\n          \r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { Button, ButtonToolbar } from \"react-bootstrap\";\r\nimport { AddSalesModal } from \"./AddSalesModal\";\r\nimport { EditSalesModal } from \"./EditSalesModal\";\r\nimport { DeleteSalesModal } from \"./DeleteSalesModal\";\r\n\r\n\r\nexport class Sales extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sles: [],\r\n      addModalShow: false,\r\n      editModalShow: false,\r\n      deleteModalShow: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshList();\r\n  }\r\n\r\n  refreshList() {\r\n    fetch(\"https://onboardtask.azurewebsites.net/api/sales\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({ sles: data });\r\n      });\r\n  }\r\n\r\n  componentDidUpdate() {}\r\n  openEditDialog(sles) {\r\n    this.setState({\r\n      editModalShow: true,\r\n      salesid: sles.SalesID,\r\n      salesdatesold: sles.DateSold,\r\n      customername: sles.CustomerID,\r\n      productname: sles.ProductID,\r\n      storename: sles.StoreID,\r\n    });\r\n  }\r\n  render() {\r\n    const {\r\n      sles,\r\n      salesid,\r\n      salesdatesold,\r\n      customername,\r\n      productname,\r\n      storename,\r\n    } = this.state;\r\n    let addModalClose = () => {\r\n      this.refreshList();\r\n      this.setState({ addModalShow: false });\r\n    };\r\n    let editModalClose = () => {\r\n      this.refreshList();\r\n      this.setState({ editModalShow: false });\r\n    };\r\n    let deleteModalClose = () => {\r\n      this.refreshList();\r\n      this.setState({ deleteModalShow: false });\r\n    };\r\n    return (\r\n      <div>\r\n        <ButtonToolbar>\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={() => this.setState({ addModalShow: true })}\r\n          >\r\n            Add Sales{\" \"}\r\n          </Button>\r\n\r\n          <AddSalesModal\r\n            show={this.state.addModalShow}\r\n            onHide={\r\n                addModalClose}\r\n          ></AddSalesModal>\r\n        </ButtonToolbar>\r\n        <Table className=\"mt-4\">\r\n          <thead>\r\n            <tr>\r\n              {/* <th>SalesID</th> */}\r\n              <th>Customer</th>\r\n              <th>Product</th>\r\n              <th> Store </th>\r\n              <th>Date Sold</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {sles.map((sles, index) => (\r\n              <tr key={index}>\r\n                {/* <td>{sles.SalesID}</td> */}\r\n                <td>{sles.CustomerName}</td>\r\n                <td>{sles.ProductName}</td>\r\n                <td>{sles.StoreName}</td>\r\n                <td>{sles.DateSold}</td>\r\n                \r\n                <td>\r\n                  <ButtonToolbar>\r\n                    <Button\r\n                      className=\"mr-2\"\r\n                      variant=\"info\"\r\n                      onClick={() => this.openEditDialog(sles)}\r\n                    >\r\n                      Edit\r\n                    </Button>\r\n\r\n                    {/* <Button className=\"mr-2\" variant=\"info\" \r\n                                    onClick={()=> this.setState({editModalShow:true, \r\n                                    salesid:sles.SalesID, salesdatesold:sles.DateSold,\r\n                                    customername:sles.CustomerName,productname:sles.ProductName,\r\n                                    storename:sles.StoreName})}> Edit </Button> */}\r\n\r\n                    <Button\r\n                      className=\"mr-2\"\r\n                      variant=\"danger\"\r\n                      onClick={() =>\r\n                        this.setState({\r\n                          deleteModalShow: true,\r\n                          salesid: sles.SalesID,\r\n                        })\r\n                      }\r\n                    >\r\n                      {\" \"}\r\n                      Delete{\" \"}\r\n                    </Button>\r\n\r\n                    <EditSalesModal\r\n                      show={this.state.editModalShow}\r\n                      onHide={editModalClose}\r\n                      salesid={salesid}\r\n                      salesdatesold={salesdatesold}\r\n                      customername={customername}\r\n                      productname={productname}\r\n                      storename={storename}\r\n                    ></EditSalesModal>\r\n\r\n                    <DeleteSalesModal\r\n                      show={this.state.deleteModalShow}\r\n                      onHide={deleteModalClose}\r\n                      salesid={salesid}\r\n                    ></DeleteSalesModal>\r\n                  </ButtonToolbar>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n            \r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import React,{Component} from 'react';\r\nimport {Navbar, Nav } from 'react-bootstrap'\r\nimport {NavLink} from 'react-router-dom'\r\nexport class Navigation extends Component\r\n{\r\n    render()\r\n    {\r\n        return(\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\"></Navbar.Toggle>\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Navbar.Brand href=\"/\">OnBoard</Navbar.Brand>\r\n            <Nav className=\"mr-auto\">\r\n                <NavLink className=\"d-inline p-2 bg-dark text-white\" to=\"/Customer/customer\">Customer</NavLink>\r\n                <NavLink className=\"d-inline p-2 bg-dark text-white\" to=\"/Product/product\">Product</NavLink>\r\n                <NavLink className=\"d-inline p-2 bg-dark text-white\" to=\"/Store/store\">Store</NavLink>\r\n                <NavLink className=\"d-inline p-2 bg-dark text-white\" to=\"/Sales/sales\">Sales</NavLink>\r\n            </Nav>\r\n            </Navbar.Collapse>\r\n            </Navbar>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport './App.css';\n\nimport {BrowserRouter, Route,Switch } from 'react-router-dom'\n\nimport {Customer} from './Components/Customer/Customer'\nimport {Product } from './Components/Product/Product';\nimport {Store} from './Components/Store/store';\nimport {Sales} from './Components/Sales/sales';\nimport {Navigation} from './Components/Navigation'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n      <Navigation/>\n      <switch>\n        <Route path='/' component={Customer} exact></Route>\n        <Route path='/Customer/customer' component={Customer}></Route>\n        <Route path='/Product/product' component={Product}></Route>\n        <Route path='/Store/store' component={Store}></Route>\n        <Route path='/Sales/sales' component={Sales}></Route>\n      </switch>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}